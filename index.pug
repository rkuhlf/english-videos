//- One page application

mixin title(text)
    h2.title= text

<!DOCTYPE html>
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")

        script(src="./script.js")

        title English Videos
    body 
        //- Big title
        .section
            +title("Automated English Videos")

        //- Scroll down for tutorial on how to get the id and other information from the collegeboard website
        .section
            +title("Get Information")

        //- Then the input to send the post request
        //- have one version where you just edit it raw
        //- And one where you specify only the things that you need to send
        .section
            h3 Send Input
            //- have a button in the top right to change from editing the raw version to editing the slimmed down version
            //- Goes all the way across the top, URL label is on the right
            label URL
            input.one-line.d-block#url(type="text", name="url", value="https://asdf.com")


            label Headers
            input.box#headers(type="text", name="headers")

            label Body
            input.box#body(type="text", name="body")

            .row
                input#startVideo(type="number")
                input#endVideo(type="number")
                //- update this dynamically to show the number of videos you would watch
                //- ex. watch 14 videos
                button#send-request(type="submit") Watch videos 

        //- Then an explanation of how post requests work
        .section
            +title("How It Works")

            p
                The internet consists of connections between frontend websites and backend databases. Both of these are hosted on servers, but generally only the frontend is intended for public use. However, by determining how the backend works, you can fake interactions on the frontend and communicate with the server.
            
            //- mention GraphQL API
            p
                College Board's website uses a common interface called GraphQL to interact with their servers. By watching the network data, we can figure out how to send our own request to the correct endpoint. 

            //- Describe how the javascript code works on this website
            //- How are the inputs used
            p
